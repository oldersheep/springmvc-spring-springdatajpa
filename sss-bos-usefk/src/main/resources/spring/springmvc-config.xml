<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
				        http://www.springframework.org/schema/mvc
				        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
				        http://www.springframework.org/schema/context
				        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- MVC注解驱动 -->
	<mvc:annotation-driven>
		<!-- 解决java.lang.IllegalArgumentException: No converter found for return value of type
			 springmvc默认是没有对象转换成json的转换器的，需要添加Jackson的jar包，如果还是没有解决，则将下面的注释放开
			 目前还没遇见依然不行的情况，所以下面的是否可行，未知
		
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>-->
		<!-- 采用自定义方案 -->
		<mvc:message-converters>
			<!-- 定义文本转化器 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg index="0" value="UTF-8" />
			</bean>
		</mvc:message-converters>
		
	</mvc:annotation-driven>

	<!-- 配置扫描器，使得@Controller注解生效 -->
	<context:component-scan base-package="com.xxx.bos.controller" />

	<!-- 定义视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 处理静态资源被“/”所拦截的问题 -->
	<mvc:default-servlet-handler />

	<!-- 定义文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值10MB，10*1024*1024 -->
		<property name="maxUploadSize" value="10485760"></property>
	</bean>
</beans>